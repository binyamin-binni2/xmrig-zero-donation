name: Build XMRig + Release

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [linux, windows, android]

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Install dependencies (common)
      run: |
        sudo apt update
        sudo apt install -y \
          build-essential cmake automake libtool pkg-config \
          git wget zip unzip curl \
          libssl-dev libhwloc-dev libuv1-dev \
          mingw-w64 \
          ninja-build \
          android-sdk cmake make

    - name: Set up Android NDK
      if: matrix.target == 'android'
      run: |
        echo "y" | sudo ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager "ndk;27.2.12479018"
        echo "ANDROID_NDK_HOME=${ANDROID_HOME}/ndk/27.2.12479018" >> $GITHUB_ENV

    - name: Clone XMRig
      run: |
        git clone https://github.com/xmrig/xmrig.git
        cd xmrig
        git submodule update --init --recursive

    # ---------- Linux ----------
    - name: Build XMRig (Linux)
      if: matrix.target == 'linux'
      run: |
        mkdir -p xmrig/build && cd xmrig/build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DWITH_HWLOC=ON
        cmake --build .
        strip xmrig || true
        tar -czvf ../../xmrig-linux.tar.gz xmrig

    # ---------- Windows ----------
    - name: Build libuv for Windows
      if: matrix.target == 'windows'
      run: |
        git clone https://github.com/libuv/libuv.git
        cd libuv
        sh autogen.sh
        mkdir -p build && cd build
        ../configure --host=x86_64-w64-mingw32 --disable-shared
        make

    - name: Build XMRig (Windows)
      if: matrix.target == 'windows'
      run: |
        mkdir -p xmrig/build && cd xmrig/build
        cmake .. \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_SYSTEM_NAME=Windows \
          -DCMAKE_C_COMPILER=x86_64-w64-mingw32-gcc \
          -DCMAKE_CXX_COMPILER=x86_64-w64-mingw32-g++ \
          -DUV_INCLUDE_DIR=../../libuv/include \
          -DUV_LIBRARY=../../libuv/build/.libs/libuv.a \
          -DWITH_HWLOC=OFF
        cmake --build .
        x86_64-w64-mingw32-strip xmrig.exe || true
        zip -j ../../xmrig-windows.zip xmrig.exe

    # ---------- Android ----------
    - name: Build libuv for Android
      if: matrix.target == 'android'
      run: |
        git clone https://github.com/libuv/libuv.git
        cd libuv
        mkdir -p build-android && cd build-android
        cmake .. \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=arm64-v8a \
          -DANDROID_PLATFORM=android-24 \
          -DCMAKE_BUILD_TYPE=Release
        cmake --build .

    - name: Build XMRig (Android)
      if: matrix.target == 'android'
      run: |
        mkdir -p xmrig/build && cd xmrig/build
        cmake .. \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=arm64-v8a \
          -DANDROID_PLATFORM=android-24 \
          -DCMAKE_BUILD_TYPE=Release \
          -DUV_INCLUDE_DIR=../../libuv/include \
          -DUV_LIBRARY=../../libuv/build-android/libuv.a \
          -DWITH_HWLOC=OFF
        cmake --build .
        tar -czvf ../../xmrig-android.tar.gz xmrig

    # ---------- Upload Release ----------
    - name: Upload Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          xmrig-linux.tar.gz
          xmrig-windows.zip
          xmrig-android.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
