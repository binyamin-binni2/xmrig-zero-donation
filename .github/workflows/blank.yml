name: Build XMRig + Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Linux dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential cmake hwloc libhwloc-dev libuv1-dev libssl-dev git

      - name: Build XMRig
        run: |
          mkdir -p xmrig/build
          cd xmrig/build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build .

      - uses: actions/upload-artifact@v4
        with:
          name: xmrig-linux
          path: xmrig/build/xmrig

  build-windows:
    name: Build for Windows (x64)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install MinGW and deps
        run: |
          sudo apt update
          sudo apt install -y cmake ninja-build g++-mingw-w64-x86-64 gcc-mingw-w64-x86-64 git autoconf libtool

      - name: Build libuv for Windows
        run: |
          git clone https://github.com/libuv/libuv.git
          cd libuv
          sh autogen.sh
          ./configure --host=x86_64-w64-mingw32 --prefix=$PWD/build-mingw CC=x86_64-w64-mingw32-gcc
          make -j$(nproc)
          make install

      - name: Build XMRig for Windows
        run: |
          mkdir -p xmrig/build
          cd xmrig/build
          cmake .. \
            -DCMAKE_SYSTEM_NAME=Windows \
            -DCMAKE_SYSTEM_PROCESSOR=x86_64 \
            -DCMAKE_C_COMPILER=x86_64-w64-mingw32-gcc \
            -DCMAKE_CXX_COMPILER=x86_64-w64-mingw32-g++ \
            -DCMAKE_BUILD_TYPE=Release \
            -DUV_INCLUDE_DIR=../../libuv/include \
            -DUV_LIBRARY=../../libuv/build-mingw/lib/libuv.a
          cmake --build .

      - uses: actions/upload-artifact@v4
        with:
          name: xmrig-windows.exe
          path: xmrig/build/xmrig.exe

  build-android:
    name: Build for Android (arm64)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r27c

      - name: Build libuv for Android (arm64)
        run: |
          git clone https://github.com/libuv/libuv.git
          cd libuv
          mkdir build-android && cd build-android
          cmake .. \
            -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
            -DANDROID_ABI=arm64-v8a \
            -DANDROID_PLATFORM=android-21 \
            -DCMAKE_BUILD_TYPE=Release
          cmake --build .

      - name: Build XMRig for Android
        run: |
          mkdir -p xmrig/build
          cd xmrig/build
          cmake .. \
            -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
            -DANDROID_ABI=arm64-v8a \
            -DANDROID_PLATFORM=android-21 \
            -DCMAKE_BUILD_TYPE=Release \
            -DUV_INCLUDE_DIR=../../libuv/include \
            -DUV_LIBRARY=../../libuv/build-android/libuv.a
          cmake --build .

      - uses: actions/upload-artifact@v4
        with:
          name: xmrig-android
          path: xmrig/build/xmrig

  release:
    name: Upload to GitHub Releases
    needs: [build-linux, build-windows, build-android]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Rename and package
        run: |
          mkdir -p release
          mv dist/xmrig-linux/xmrig release/xmrig-linux
          mv dist/xmrig-windows.exe/xmrig.exe release/xmrig-windows.exe
          mv dist/xmrig-android/xmrig release/xmrig-android

      - name: Upload release to GitHub
        uses: softprops/action-gh-release@v2
        with:
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
